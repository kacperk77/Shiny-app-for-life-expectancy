world_data <- fortify(world_data)
View(world_data)
library(rvest)
url <- "https://www.nationsonline.org/oneworld/country_code_list.htm"
iso_codes <- url %>%
read_html() %>%
html_nodes(xpath = '//*[@id="CountryCode"]') %>%
html_table()
iso_codes <- iso_codes[[1]][, -1]
View(iso_codes)
remove(iso_codes)
url <- "https://www.nationsonline.org/oneworld/country_code_list.htm"
iso_codes <- url %>%
read_html() %>%
html_nodes(xpath = '//*[@id="CountryCode"]') %>%
html_table()
View(iso_codes)
iso_codes[[1]][, -1]
iso_codes <- iso_codes[[1]][, -1]
View(iso_codes)
iso_codes[[1]]
remove(iso_codes)
iso_codes <- url %>%
read_html() %>%
html_nodes(xpath = '//*[@id="CountryCode"]') %>%
html_table()
iso_codes <- iso_codes[[1]][, -1]
iso_codes[[1]]
iso_codes[[2]]
iso_codes[, -1]
[[1]]
iso_codes <- iso_codes[[1]][, -1]
url <- "https://www.nationsonline.org/oneworld/country_code_list.htm"
iso_codes <- url %>%
read_html() %>%
html_nodes(xpath = '//*[@id="CountryCode"]') %>%
html_table()
iso_codes <- iso_codes[[1]][, -1]
iso_codes <- iso_codes[!apply(iso_codes, 1, function(x){all(x == x[1])}), ]
names(iso_codes) <- c("Country", "ISO2", "ISO3", "UN")
View(iso_codes)
View(data)
data['ISO3'] <-
iso_codes$ISO3[match(data$Country, iso_codes$Country)]
View(data)
theme_bw() + theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14),
strip.text = element_text(size = 14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "bottom",
panel.border = element_blank(),
strip.background = element_rect(fill = 'white', colour = 'white'))
library(maps)
library(shiny)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(rvest)
my_theme <- function () {
theme_bw() + theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14),
strip.text = element_text(size = 14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "bottom",
panel.border = element_blank(),
strip.background = element_rect(fill = 'white', colour = 'white'))
}
worldMaps <- function(df, world_data, data_type, period, indicator){
theme_bw() + theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14),
strip.text = element_text(size = 14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "bottom",
panel.border = element_blank(),
strip.background = element_rect(fill = 'white', colour = 'white'))
View(world_data)
install.packages('getmap')
install.packages('ggmap')
library(ggmap)
library(maps)
library(shiny)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(rvest)
map <- get_map()
map <- get_map(location = 'united states', zoom = 4, maptype = 'terrain',
source = 'google', color = 'color')
(map <- get_map(maptype = "roadmap"))
write.csv(iso_codes, 'iso_codes.csv')
library(maps)
library(shiny)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(rvest)
library(ggmap)
statusofthecountry
datajoin <- inner_join(world_data, data)
View(world_data)
names()
names(world_data)
names(world_data)[5] <- Country
Country <- names(world_data)[5]
world_data
names(world_data)[5]
Country <- names(world_data)[5]
View(world_data)
Country <- colnames(world_data)[5]
View(world_data)
world_data %>% rename(region = Country)
world_data %>% rename(region = Country)
world_data <- world_data %>% rename(region = Country)
runApp()
rename(region = Country)
world_data <- world_data %>% rename(region = Country)
View(world_data)
View(world_data)
world_data <- world_data %>% rename(Country = region)
View(world_data)
datajoin <- inner_join(world_data, data)
View(datajoin)
data <- read.csv('lifeexpectancy2.csv')
url <- "https://www.nationsonline.org/oneworld/country_code_list.htm"
iso_codes <- url %>%
read_html() %>%
html_nodes(xpath = '//*[@id="CountryCode"]') %>%
html_table()
iso_codes <- iso_codes[[1]][, -1]
iso_codes <- iso_codes[!apply(iso_codes, 1, function(x){all(x == x[1])}), ]
names(iso_codes) <- c("Country", "ISO2", "ISO3", "UN")
data['ISO3'] <-
iso_codes$ISO3[match(data$Country, iso_codes$Country)]
world_data <- ggplot2::map_data('world')
world_data <- fortify(world_data)
statusofthecountry <- data %>%
count(Status) %>%
arrange(desc(Status))
summary(data)
world_data <- world_data %>% rename(Country = region)
datajoin <- inner_join(world_data, data)
ggplot(datajoin)+
geom_sf(aes(fill = lifeexp))
ggplot(datajoin)+
geom_polygon(aes(fill = lifeexp))
View(datajoin)
ggplot(datajoin, aes(x = long, y = lat, group = group, fill = lifeexp))+
geom_polygon(colour = "white")
################################################################################
# A file containing objects (variables) which are available both in ui.R and server.R
# It may support the app in several fields, such as package installation,
# data preprocessing, database connection etc.
################################################################################
setwd('C:\\Users\\lenovo\\Desktop\\shiny_darmowe_pakiet_startowy-master')
library(maps)
library(shiny)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(rvest)
library(ggmap)
data <- read.csv('lifeexpectancy2.csv')
url <- "https://www.nationsonline.org/oneworld/country_code_list.htm"
iso_codes <- url %>%
read_html() %>%
html_nodes(xpath = '//*[@id="CountryCode"]') %>%
html_table()
iso_codes <- iso_codes[[1]][, -1]
iso_codes <- iso_codes[!apply(iso_codes, 1, function(x){all(x == x[1])}), ]
names(iso_codes) <- c("Country", "ISO2", "ISO3", "UN")
data['ISO3'] <-
iso_codes$ISO3[match(data$Country, iso_codes$Country)]
world_data <- ggplot2::map_data('world')
world_data <- fortify(world_data)
statusofthecountry <- data %>%
count(Status) %>%
arrange(desc(Status))
summary(data)
world_data <- world_data %>% rename(Country = region)
datajoin <- left_join_join(world_data, data)
datajoin <- left_join(world_data, data)
ggplot(datajoin, aes(x = long, y = lat, group = group, fill = lifeexp))+
geom_polygon(colour = "white")
ggplot(datajoin, aes(x = long, y = lat, group = group, fill = lifeexp))+
geom_polygon(colour = "white")
ggplot(datajoin, aes(x = long, y = lat, group = group, fill = lifeexp))+
geom_polygon(colour = "black")
ggplot(datajoin, aes(x = long, y = lat, group = group, fill = lifeexp))+
geom_polygon(colour = "black")
################################################################################
# A file containing objects (variables) which are available both in ui.R and server.R
# It may support the app in several fields, such as package installation,
# data preprocessing, database connection etc.
################################################################################
setwd('C:\\Users\\lenovo\\Desktop\\shiny_darmowe_pakiet_startowy-master')
library(maps)
library(shiny)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(rvest)
library(ggmap)
data <- read.csv('lifeexpectancy2.csv')
url <- "https://www.nationsonline.org/oneworld/country_code_list.htm"
iso_codes <- url %>%
read_html() %>%
html_nodes(xpath = '//*[@id="CountryCode"]') %>%
html_table()
iso_codes <- iso_codes[[1]][, -1]
iso_codes <- iso_codes[!apply(iso_codes, 1, function(x){all(x == x[1])}), ]
names(iso_codes) <- c("Country", "ISO2", "ISO3", "UN")
data['ISO3'] <-
iso_codes$ISO3[match(data$Country, iso_codes$Country)]
world_data <- ggplot2::map_data('world')
world_data <- fortify(world_data)
statusofthecountry <- data %>%
count(Status) %>%
arrange(desc(Status))
summary(data)
world_data <- world_data %>% rename(Country = region)
datajoin <- left_join(world_data, data)
ggplot(datajoin, aes(x = long, y = lat, group = group, fill = lifeexp))+
geom_polygon(colour = "black")
ggplot(datajoin, aes(x = long, y = lat, group = group, fill = lifeexp))+
geom_polygon(colour = "red")
ggplot(datajoin, aes(x = long, y = lat, group = group, fill = lifeexp))+
geom_polygon(colour = "black")
plotOutput('wykres') <-   ggplot(data = data) +
geom_histogram(mapping = aes(x = lifeexp, fill = Status),  breakes = 10,  position = 'dodge')
ggplot(datajoin,
aes(x = long, y = lat,
fill = lifeexp))+
geom_polygon(colour = "black")
plotOutput('wykres') <-   ggplot(datajoin,
aes(x = long, y = lat,
group = group, fill = lifeexp))+
geom_polygon(colour = "black")
ggplot(datajoin,
aes(x = long, y = lat,
group = group, fill = lifeexp))+
geom_polygon(colour = "black")
runApp('C:/Users/lenovo/Desktop/projects/shiny life expectancy')
runApp('C:/Users/lenovo/Desktop/projects/shiny life expectancy')
runApp('C:/Users/lenovo/Desktop/projects/shiny life expectancy')
runApp('C:/Users/lenovo/Desktop/projects/shiny life expectancy')
remove(flights)
runApp('C:/Users/lenovo/Desktop/projects/shiny life expectancy')
View(data)
hist(data$lifeexp[Status == Developed]),
xlab = "Developed countries",
ylab = "Count", col = "blue", border = "black", main = "Histogram")
hist(data$lifeexp[Status == Developed],
xlab = "Developed countries",
ylab = "Count", col = "blue", border = "black", main = "Histogram")
hist(data$lifeexp[data$Status == Developed],
xlab = "Developed countries",
ylab = "Count", col = "blue", border = "black", main = "Histogram")
hist(data$lifeexp[data$Status == 'Developed'],
xlab = "Developed countries",
ylab = "Count", col = "blue", border = "black", main = "Histogram")
runApp('C:/Users/lenovo/Desktop/projects/shiny life expectancy')
runApp('C:/Users/lenovo/Desktop/projects/shiny life expectancy')
runApp('C:/Users/lenovo/Desktop/projects/shiny life expectancy')
ggplot(datajoin, aes(x = long, y = lat,
group = group, fill = lifeexp))+
geom_polygon(colour = "black")+
scale_fill_continuous(low = 'yellow',
high = 'red',
guide = 'colorbar')
ggplot(datajoin, aes(x = long, y = lat,
group = group, fill = lifeexp))+
geom_polygon(colour = "black")+
scale_fill_continuous(low = 'yellow',
high = 'black',
guide = 'colorbar')
runApp('C:/Users/lenovo/Desktop/projects/shiny life expectancy')
ggplot(datajoin, aes(x = long, y = lat,
group = group, fill = lifeexp))+
geom_polygon(colour = "black")+
scale_fill_continuous(low = 'red',
high = 'black',
guide = 'colorbar')
ggplot(datajoin, aes(x = long, y = lat,
group = group, fill = lifeexp))+
geom_polygon(colour = "white")+
scale_fill_continuous(low = 'black',
high = 'red',
guide = 'colorbar')
runApp('C:/Users/lenovo/Desktop/projects/shiny life expectancy')
ggplot(datajoin, aes(x = long, y = lat,
group = group, fill = lifeexp))+
geom_polygon(colour = "black")+
scale_fill_continuous(low = 'black',
high = 'red',
guide = 'colorbar')
ggplot(datajoin, aes(x = long, y = lat,
group = group, fill = lifeexp))+
geom_polygon(colour = "black")+
scale_fill_continuous(low = 'blue',
high = 'black',
guide = 'colorbar')
ggplot(datajoin, aes(x = long, y = lat,
group = group, fill = lifeexp))+
geom_polygon(colour = "black")+
scale_fill_continuous(low = 'blue',
high = 'green',
guide = 'colorbar')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(data)
runApp()
runApp()
shiny::runApp()
runApp()
ggplot(datajoin, aes(x = long, y = lat,
group = group, fill = Status))+
geom_polygon(colour = "black")
datajoin[datajoin$Status == 'Devloped'] <- datajoin[datajoin$Country == 'France']
datajoin[datajoin$Status == 'Devloped',] <- datajoin[datajoin$Country == 'France',]
ifelse(datajoin$Country %in% c('France', 'Canada'), datajoin$Status == 'Developed',
no = datajoin$Status =datajoin$Status)
ifelse(datajoin$Country %in% c('France', 'Canada'), datajoin$Status == 'Developed',
no = datajoin$Status == datajoin$Status)
datajoin$Status <- ifelse(datajoin$Country %in% c('France', 'Canada'), datajoin$Status == 'Developed',
no = datajoin$Status == datajoin$Status)
ggplot(datajoin, aes(x = long, y = lat,
group = group, fill = Status))+
geom_polygon(colour = "black")
data$Country == "France"
data$Status <- ifelse(data$Country == "France", data$Status <- Developed,
data$Status <- data$Status)
data$Status <- ifelse(data$Country == "France", data$Status <- 'Developed',
data$Status <- data$Status)
################################################################################
# A file containing objects (variables) which are available both in ui.R and server.R
# It may support the app in several fields, such as package installation,
# data preprocessing, database connection etc.
################################################################################
setwd('C:\\Users\\lenovo\\Desktop\\shiny_darmowe_pakiet_startowy-master')
library(maps)
library(shiny)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(rvest)
library(ggmap)
data <- read.csv('lifeexpectancy2.csv')
url <- "https://www.nationsonline.org/oneworld/country_code_list.htm"
iso_codes <- url %>%
read_html() %>%
html_nodes(xpath = '//*[@id="CountryCode"]') %>%
html_table()
iso_codes <- iso_codes[[1]][, -1]
iso_codes <- iso_codes[!apply(iso_codes, 1, function(x){all(x == x[1])}), ]
names(iso_codes) <- c("Country", "ISO2", "ISO3", "UN")
world_data <- ggplot2::map_data('world')
world_data <- fortify(world_data)
statusofthecountry <- data %>%
count(Status) %>%
arrange(desc(Status))
data$Status <- ifelse(data$Country == "France", data$Status <- 'Developed')
data$Status <- ifelse(data$Country == "France", data$Status <- 'Developed', data$Status)
View(iso_codes)
View(data)
data[data$Country == "France"]
data[data$Country == "France",] <- ifelse(data$Country == "France", data$Status <- 'Developed', data$Status)
data[data$Country == "France",]
data[data$Country == "France"]
################################################################################
# A file containing objects (variables) which are available both in ui.R and server.R
# It may support the app in several fields, such as package installation,
# data preprocessing, database connection etc.
################################################################################
setwd('C:\\Users\\lenovo\\Desktop\\shiny_darmowe_pakiet_startowy-master')
library(maps)
library(shiny)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(rvest)
library(ggmap)
data <- read.csv('lifeexpectancy2.csv')
url <- "https://www.nationsonline.org/oneworld/country_code_list.htm"
iso_codes <- url %>%
read_html() %>%
html_nodes(xpath = '//*[@id="CountryCode"]') %>%
html_table()
iso_codes <- iso_codes[[1]][, -1]
iso_codes <- iso_codes[!apply(iso_codes, 1, function(x){all(x == x[1])}), ]
names(iso_codes) <- c("Country", "ISO2", "ISO3", "UN")
world_data <- ggplot2::map_data('world')
world_data <- fortify(world_data)
statusofthecountry <- data %>%
count(Status) %>%
arrange(desc(Status))
transform(data, Status = case_when(
Country == "France" ~ Developed,
FALSE ~ Status)
))
world_data <- world_data %>% rename(Country = region)
datajoin <- left_join(world_data, data)
ggplot(datajoin, aes(x = long, y = lat,
group = group, fill = lifeexp))+
geom_polygon(colour = "black")+
scale_fill_continuous(low = 'black',
high = 'green',
guide = 'colorbar')
transform(data, Status = case_when(
Country == "France" ~ Developed,
FALSE ~ Status))
transform(data, Status = case_when(
Country == "France" ~ 'Developed',
FALSE ~ Status))
transform(data, Status = case_when(
Country == "France" ~ 'Developed',
FALSE ~ data$Status))
transform(data, Status = case_when(
Country == "France" ~ 'Developed',
FALSE ~ Status))
transform(data, Status = case_when(
Country == "France" ~ 'Developed',
TRUE ~ Status))
ggplot(datajoin, aes(x = long, y = lat,
group = group, fill = lifeexp))+
geom_polygon(colour = "black")+
scale_fill_continuous(low = 'black',
high = 'green',
guide = 'colorbar')
shiny::runApp()
runApp()
ggplot(datajoin, aes(x = long, y = lat,
group = group, fill = lifeexp))+
geom_polygon(colour = "black")+
scale_fill_continuous(low = 'black',
high = 'green',
guide = 'colorbar')
ggplot(datajoin, aes(x = long, y = lat,
group = group, fill = Status))+
geom_polygon(colour = "black")+
scale_fill_continuous(low = 'black',
high = 'green',
guide = 'colorbar')
ggplot(datajoin, aes(x = long, y = lat,
group = group, fill = Status))+
geom_polygon(colour = "black")
data$Status <- ifelse(data$Country == 'France', 'Developed', data$Status)
View(data)
################################################################################
# A file containing objects (variables) which are available both in ui.R and server.R
# It may support the app in several fields, such as package installation,
# data preprocessing, database connection etc.
################################################################################
setwd('C:\\Users\\lenovo\\Desktop\\shiny_darmowe_pakiet_startowy-master')
data <- read.csv('lifeexpectancy2.csv')
data$Status <- ifelse(data$Country == 'France', 'Developed', as.character(data$Status))
View(data)
data$Status <- ifelse(data$Country %in% c('France', 'Canada)', 'Developed', as.character(data$Status))
data <- read.csv('lifeexpectancy2.csv')
runApp('C:/Users/lenovo/Desktop/projects/shiny life expectancy')
ggplot(datajoin, aes(x = long, y = lat,
group = group, fill = Status))+
geom_polygon(colour = "black")
shiny::runApp()
runApp()
